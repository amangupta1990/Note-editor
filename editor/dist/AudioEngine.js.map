{"version":3,"file":"AudioEngine.js","sourceRoot":"","sources":["../src/AudioEngine.ts"],"names":[],"mappings":";;;AACA,6BAA4C;AAYpC,IAAM,eAAe,GAAI,UAAC,GAAU;IAC5B,QAAO,GAAG,CAAC,iBAAiB,EAAE,EAAC;QACjC,KAAK,GAAG,CAAC,CAAC,OAAO,IAAI,CAAC;QACtB,KAAK,GAAG,CAAC,CAAC,OAAO,IAAI,CAAC;QACtB,KAAK,GAAG,CAAC,CAAC,OAAO,IAAI,CAAC;QACtB,KAAK,GAAG,CAAC,CAAC,OAAO,IAAI,CAAC;QACtB,KAAK,IAAI,CAAC,CAAC,OAAO,KAAK,CAAC;QACxB,KAAK,IAAI,CAAC,CAAC,OAAO,KAAK,CAAC;QACxB,OAAO,CAAC,CAAC,OAAO,CAAC,CAAC;KACf;AACH,CAAC,CAAA;AAEf,IAAM,KAAK,GAAG,IAAI,gBAAS,EAAE,CAAC,aAAa,EAAE,CAAC;AAE9C,SAAS,YAAY,CAAC,KAAe;IAE7B,IAAM,UAAU,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,UAAC,KAAa,EAAE,CAAQ;QAC/C,IAAM,WAAW,GAAG,KAAK,CAAC,WAAW,CAAC,GAAG,CAAC,UAAA,GAAG,WAAG,GAAG,aAAH,GAAG,uBAAH,GAAG,CAAE,OAAO,CAAC,IAAI,EAAC,GAAG,IAAC,CAAC,CAAC;QAExE,OAAO;YACC,KAAK,EAAE,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,UAAC,CAAC,EAAC,CAAC,IAAI,OAAA,CAAC,CAAC,OAAO,CAAC,GAAG,EAAC,WAAW,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,EAAnC,CAAmC,CAAE;YACnE,QAAQ,EAAE,eAAe,CAAC,KAAK,CAAC,QAAQ,CAAC;SAChD,CAAA;IACP,CAAC,CAAC,CAAA;IACF,OAAO,UAAU,CAAC;AACpB,CAAC;AAET,SAAgB,SAAS,CAAC,MAAgB;IAElC,IAAM,IAAI,GAAG,UAAG,EAAE,CAAA;IAClB,IAAM,WAAW,GAAG,YAAY,CAAC,MAAM,CAAC,CAAC;IACzC,WAAW,CAAC,GAAG,CAAC,UAAA,CAAC;QACD,IAAA,KAAK,GAAgB,CAAC,MAAjB,EAAG,QAAQ,GAAK,CAAC,SAAN,CAAO;QAC/B,KAAK,CAAC,oBAAoB,CAAC,KAAK,EAAE,QAAQ,EAAE,IAAI,CAAC,CAAA;IAEzD,CAAC,CAAC,CAAA;AAIV,CAAC;AAZD,8BAYC;AASD;IAKQ;QAHQ,eAAU,GAAU,CAAC,CAAC;QACtB,YAAO,GAAO,EAAE,CAAC;IAGzB,CAAC;IAEA,yBAAG,GAAH;QACO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,EAAE,CAAA;IAC1C,CAAC;IACA,iCAAW,GAAX,UAAY,MAAe;IAE3B,CAAC;IAEV,kBAAC;AAAD,CAAC,AAfD,IAeC","sourcesContent":["import { split } from \"lodash\";\nimport {PolySynth , now, Part } from \"tone\";\nimport {ed_note,\n        ed_selected_note,\n        ed_beam,\n        ed_selected,\n        ed_sheet,\n        ed_state,\n        ed_stave,\n        ed_tie\n        } from './models'\n\n\n        const DURATION_VALUES =  (key:string)=>{\n                switch(key.toLocaleLowerCase()){ \n              case \"w\": return '1n';\n              case \"h\": return '2n';\n              case \"q\": return '4n';\n              case \"8\": return '8n';\n              case \"16\": return '16n';\n              case \"32\": return '32n';\n              default: return 0;\n                }\n              }\n\nconst synth = new PolySynth().toDestination();\n\nfunction getToneNotes(notes:ed_note[]){\n      \n        const tone_notes = (notes).map((_note:ed_note, i:number)=> {\n                const accidentals = _note.accidentals.map(acc=> acc?.replace(\"##\",\"x\"));\n                \n                return {\n                        notes: _note.keys.map((k,i)=> k.replace(\"/\",accidentals[i] || '') ),\n                        duration: DURATION_VALUES(_note.duration)\n                }\n          })\n          return tone_notes;\n        }\n\nexport function playChord(_notes:ed_note[]) {\n\n        const _now = now()\n        const notesToPlay = getToneNotes(_notes);\n        notesToPlay.map(n=>{\n                const { notes , duration } = n;\n                synth.triggerAttackRelease(notes, duration, _now)\n\n        })\n        \n    \n\n}\n\n// exact should be an exact replica of the sheet object in vexflow \n\n\ninterface au_track  {\n        \n}\n\nclass AudioEngine {\n        \n        private _numTracks:number = 0;\n        private _tracks:any = {};\n\n        constructor(){\n        }\n\n         add(){\n                this._tracks[this._numTracks] = []\n        }\n         updateTrack(staves:ed_stave){\n\n         }\n\n}"]}