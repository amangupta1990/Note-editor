{"version":3,"file":"AudioEngine.js","sourceRoot":"","sources":["../src/AudioEngine.ts"],"names":[],"mappings":"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","sourcesContent":["import { concat, curry, flatten } from \"lodash\";\nimport {PolySynth , now  , Transport, Part, start as startAudio, TransportTime, Time, } from \"tone\";\nimport { Tone } from \"tone/build/esm/core/Tone\";\nimport {ed_note,\n        ed_selected_note,\n        ed_beam,\n        ed_selected,\n        ed_sheet,\n        ed_state,\n        ed_stave,\n        ed_tie\n        } from './models'\n\n\n        document.addEventListener(\"click\", async () => {\n                \n                await startAudio();\n                console.log(\"context started\");\n            });\n\n        const DURATION_VALUES =  (key:string)=>{\n                switch(key.toLocaleLowerCase()){ \n              case \"w\": return '1n';\n              case \"h\": return '2n';\n              case \"q\": return '4n';\n              case \"8\": return '8n';\n              case \"16\": return '16n';\n              case \"32\": return '32n';\n              default: return 0;\n                }\n              }\n\nconst synth = new PolySynth().toDestination();\n\nfunction getToneNotes(notes:ed_note[]){\n      \n        const tone_notes = (notes).map((_note:ed_note, i:number)=> {\n                const accidentals = _note.accidentals.map(acc=> acc?.replace(\"##\",\"x\"));\n                \n                return {\n                        notes: _note.keys.map((k,i)=> k.replace(\"/\",accidentals[i] || '') ),\n                        duration: DURATION_VALUES(_note.duration)\n                }\n          })\n          return tone_notes;\n        }\n\nexport function playChord(_notes:ed_note[]) {\n        return;\n        const _now = now()\n        const notesToPlay = getToneNotes(_notes);\n        notesToPlay.map(n=>{\n                const { notes , duration } = n;\n                synth.triggerAttackRelease(notes, duration, _now)\n\n        })\n        \n    \n\n}\n\n// exact should be an exact replica of the sheet object in vexflow \n\n\ninterface au_seek  {\n        bar:number,\n        beat:number,\n        sixteenth:number,\n        position: {\n                current:number,\n                total:number\n        }\n}\n\nexport class  AudioEngine {\n        \n        private bpm: number;\n        private timeSig : number [];\n        private _numTracks:number = 0;\n        private _tracks:any = {}; \n        private notes: ed_note[];\n        private animationID: any;\n        private seekBar:au_seek; \n        private _onProgress!:Function;\n\n        constructor(sheet:ed_sheet, timeSig: string,  BPM : number , onProgress:Function){\n                this.seekBar = {\n                        bar: 0,\n                        beat: 0,\n                        sixteenth: 0,\n                        position: {\n                                current : 0,\n                                total: 0,\n                        }\n                }\n                this.bpm = BPM || 120 ;\n                this.notes = [];\n                this.timeSig = [ ... timeSig.split(\"/\")].map((sig=> parseInt(sig)));\n                Transport.bpm.value = this.bpm;\n                Transport.timeSignature = this.timeSig;\n                this.updateTrack(sheet);\n                Transport.on('stop',()=>{\n                        console.log('transportEnded')\n                })\n                this._onProgress = onProgress;\n\n\n                \n        }\n\n        _add(){\n                this._tracks[this._numTracks] = []\n        }\n\n        _getTime(staveIndex: number, noteIndex: number , duration: string){\n                \n                \n                return `${staveIndex}:${noteIndex}:0`;\n                \n\n        }\n\n        updateTrack(sheet:ed_sheet){\n                this.stop();\n                this.notes = [];\n                sheet.staves\n                .map((stave:ed_stave)=>stave.notes)\n                .map((_notes:ed_note[])=>  { this.notes = concat( this.notes ,_notes) } );\n                const _notes = this.notes;\n\n                \n                                  \n                const partNotes =   _notes.map((note: ed_note,i:number)=>{\n\n                        const {notes ,duration} = getToneNotes([note])[0];\n                 \n                \n                                const time = this._getTime(note.staveIndex, note.noteIndex, note.duration  )\n                                return { notes, time , duration , isRest : note.isRest};\n                                \n                       })\n                       \n\n                                             \n                                            \n                for (let index = 0 ; index < partNotes.length ; index++) {\n                        const pn = partNotes[index];\n                        Transport.schedule((time) => {\n                                if(!pn.isRest){\n                                synth.triggerAttackRelease(pn.notes, pn.duration ,time);\n                                }\n                                this.seekBar = {\n                                        bar : parseInt(pn.time.split(\":\")[0]),\n                                        beat : parseInt(pn.time.split(\":\")[1]),\n                                        sixteenth: parseInt(pn.time.split(\":\")[2]),\n                                        position :{\n                                                current : index,\n                                                total: partNotes.length\n                                        }\n                                }\n\n                        }, pn.time);\n                }                      \n       \n                const start = partNotes[0].time;\n                const end = partNotes[partNotes.length-1].time\n                this.play(start,end);\n                \n         }\n         progress(){\n                 // scale it between 0-1\n                        const transport = Transport;\n\t\t\tconst progress = (this.seekBar.position.current +  1) / this.seekBar.position.total;\n                        console.log (progress*100);\n                        this._onProgress && this._onProgress(this.seekBar);\n                        this.animationID =  requestAnimationFrame(this.progress.bind(this))\n         }\n         play(start:string,end:string){\n                 Transport.loopStart = start;\n                 Transport.loopEnd = end;\n                 Transport.start();\n                 this.animationID = requestAnimationFrame(this.progress.bind(this))\n         }\n         stop(){\n                 Transport.stop();\n                 Transport.cancel();\n                 cancelAnimationFrame(this.animationID);\n         }\n\n}"]}